/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MerkleRewards,
  MerkleRewardsInterface,
} from "../../../../contracts/libraries/MerkleRewards.sol/MerkleRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_rewardsRoot",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract ILockingVault",
        name: "_lockingVault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalGrant",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalGrant",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "claimAndDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockingVault",
    outputs: [
      {
        internalType: "contract ILockingVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516109b83803806109b883398101604081905261002f91610119565b6000839055606082901b6001600160601b031916608052600280546001600160a01b0319166001600160a01b0383811691821790925560405163095ea7b360e01b81526004810191909152600019602482015284918491849183169063095ea7b390604401602060405180830381600087803b1580156100ae57600080fd5b505af11580156100c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e691906100f2565b50505050505050610173565b600060208284031215610103578081fd5b81518015158114610112578182fd5b9392505050565b60008060006060848603121561012d578182fd5b83519250602084015161013f8161015b565b60408501519092506101508161015b565b809150509250925092565b6001600160a01b038116811461017057600080fd5b50565b60805160601c6108206101986000396000818161012501526101d101526108206000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063c884ef8311610050578063c884ef83146100bb578063d2a04345146100db578063fc0c546a1461012057610072565b806309ed28f1146100775780630a33e8c21461008c578063217863b71461009f575b600080fd5b61008a610085366004610704565b610147565b005b61008a61009a36600461068f565b610255565b6100a860005481565b6040519081526020015b60405180910390f35b6100a86100c9366004610655565b60016020526000908152604090205481565b6002546100fb9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b2565b6100fb7f000000000000000000000000000000000000000000000000000000000000000081565b61018585858585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506103b192505050565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152602482018790527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b15801561021557600080fd5b505af1158015610229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024d919061066f565b505050505050565b73ffffffffffffffffffffffffffffffffffffffff85166102d7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5a65726f20616464722064656c65676174696f6e00000000000000000000000060448201526064015b60405180910390fd5b61031586858585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506103b192505050565b6002546040517ff45346dc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301526024820189905287811660448301529091169063f45346dc90606401600060405180830381600087803b15801561039157600080fd5b505af11580156103a5573d6000803e3d6000fd5b50505050505050505050565b6040517fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b166020820152603481018390526000906054016040516020818303038152906040528051906020012090506104118260005483610526565b610477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f496e76616c69642050726f6f660000000000000000000000000000000000000060448201526064016102ce565b33600090815260016020526040902054839061049490869061076a565b11156104fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f436c61696d656420746f6f206d7563680000000000000000000000000000000060448201526064016102ce565b336000908152600160205260408120805486929061051b90849061076a565b909155505050505050565b600082610533858461053c565b14949350505050565b600081815b84518110156105a85761059482868381518110610587577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516105b0565b9150806105a081610782565b915050610541565b509392505050565b60008183106105cc5760008281526020849052604090206105db565b60008381526020839052604090205b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461060657600080fd5b919050565b60008083601f84011261061c578182fd5b50813567ffffffffffffffff811115610633578182fd5b6020830191508360208260051b850101111561064e57600080fd5b9250929050565b600060208284031215610666578081fd5b6105db826105e2565b600060208284031215610680578081fd5b815180151581146105db578182fd5b60008060008060008060a087890312156106a7578182fd5b863595506106b7602088016105e2565b945060408701359350606087013567ffffffffffffffff8111156106d9578283fd5b6106e589828a0161060b565b90945092506106f89050608088016105e2565b90509295509295509295565b60008060008060006080868803121561071b578081fd5b8535945060208601359350604086013567ffffffffffffffff81111561073f578182fd5b61074b8882890161060b565b909450925061075e9050606087016105e2565b90509295509295909350565b6000821982111561077d5761077d6107bb565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156107b4576107b46107bb565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212205c5952d2b168da46cf6cfc8197c592187b12d0c1879fdc3f9874aad5aadb14a864736f6c63430008030033";

type MerkleRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MerkleRewardsConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MerkleRewards__factory extends ContractFactory {
  constructor(...args: MerkleRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _rewardsRoot: PromiseOrValue<BytesLike>,
    _token: PromiseOrValue<string>,
    _lockingVault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<MerkleRewards> {
    return super.deploy(
      _rewardsRoot,
      _token,
      _lockingVault,
      overrides || {},
    ) as Promise<MerkleRewards>;
  }
  override getDeployTransaction(
    _rewardsRoot: PromiseOrValue<BytesLike>,
    _token: PromiseOrValue<string>,
    _lockingVault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardsRoot,
      _token,
      _lockingVault,
      overrides || {},
    );
  }
  override attach(address: string): MerkleRewards {
    return super.attach(address) as MerkleRewards;
  }
  override connect(signer: Signer): MerkleRewards__factory {
    return super.connect(signer) as MerkleRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleRewardsInterface {
    return new utils.Interface(_abi) as MerkleRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): MerkleRewards {
    return new Contract(address, _abi, signerOrProvider) as MerkleRewards;
  }
}
