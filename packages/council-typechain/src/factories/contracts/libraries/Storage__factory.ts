/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Storage,
  StorageInterface,
} from "../../../contracts/libraries/Storage";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "typeString",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "getPtr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6102b061003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c806387ec29271461003a575b600080fd5b61004d610048366004610184565b61005f565b60405190815260200160405180910390f35b600080836040516020016100739190610238565b604051602081830303815290604052805190602001209050600081846040516020016100a092919061021e565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152919052805160209091012095945050505050565b600082601f8301126100ef578081fd5b813567ffffffffffffffff8082111561010a5761010a61024b565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156101505761015061024b565b81604052838152866020858801011115610168578485fd5b8360208701602083013792830160200193909352509392505050565b60008060408385031215610196578182fd5b823567ffffffffffffffff808211156101ad578384fd5b6101b9868387016100df565b935060208501359150808211156101ce578283fd5b506101db858286016100df565b9150509250929050565b60008151815b8181101561020557602081850181015186830152016101eb565b818111156102135782828601525b509290920192915050565b600083825261023060208301846101e5565b949350505050565b600061024482846101e5565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220fdd574028e73d7d54dd0666d1fa26a01150af5440e697fc2590842048e31d3e964736f6c63430008030033";

type StorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StorageConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Storage__factory extends ContractFactory {
  constructor(...args: StorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<Storage> {
    return super.deploy(overrides || {}) as Promise<Storage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Storage {
    return super.attach(address) as Storage;
  }
  override connect(signer: Signer): Storage__factory {
    return super.connect(signer) as Storage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StorageInterface {
    return new utils.Interface(_abi) as StorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): Storage {
    return new Contract(address, _abi, signerOrProvider) as Storage;
  }
}
