/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ScoreVault,
  ScoreVaultInterface,
} from "../../ScoreVault.sol/ScoreVault";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum AbstractScoreVault.Result",
        name: "result",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "newScore",
        type: "int256",
      },
    ],
    name: "ScoreChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "enum AbstractScoreVault.Result",
        name: "result",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
    ],
    name: "addResult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "deauthorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAuthorized",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "queryVotePower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "scores",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610780806100326000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80638da5cb5b11610076578063b91816111161005b578063b91816111461016e578063e91f3235146101a1578063fe9fbb80146101da576100a3565b80638da5cb5b14610116578063b6a5d7de1461015b576100a3565b8063041ee230146100a857806313af4035146100bd57806327c97fa5146100d057806376dd110f146100e3575b600080fd5b6100bb6100b6366004610629565b6101ed565b005b6100bb6100cb366004610608565b610341565b6100bb6100de366004610608565b61040e565b6101036100f1366004610608565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b6000546101369073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010d565b6100bb610169366004610608565b6104db565b61019161017c366004610608565b60016020526000908152604090205460ff1681565b604051901515815260200161010d565b6101036101af36600461066a565b50505073ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b6101916101e8366004610608565b6105b5565b6000826001811115610228577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561026e5773ffffffffffffffffffffffffffffffffffffffff8316600090815260026020526040812080548392906102639084906106ec565b909155506102a99050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260026020526040812080548392906102a3908490610704565b90915550505b8160018111156102e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff84166000818152600260209081526040918290205491519182527f0d496d8c4d9d307b98eb6f737db6bce974c91d744497f6dae8550a0db0890752910160405180910390a3505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff16331461048f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064016103be565b73ffffffffffffffffffffffffffffffffffffffff16600090815260016020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60005473ffffffffffffffffffffffffffffffffffffffff16331461055c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53656e646572206e6f74206f776e65720000000000000000000000000000000060448201526064016103be565b6105b28173ffffffffffffffffffffffffffffffffffffffff16600090815260016020819052604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169091179055565b50565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604090205460ff165b919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146105df57600080fd5b600060208284031215610619578081fd5b610622826105e4565b9392505050565b60008060006060848603121561063d578182fd5b610646846105e4565b9250602084013560028110610659578283fd5b929592945050506040919091013590565b6000806000806060858703121561067f578081fd5b610688856105e4565b935060208501359250604085013567ffffffffffffffff808211156106ab578283fd5b818701915087601f8301126106be578283fd5b8135818111156106cc578384fd5b8860208285010111156106dd578384fd5b95989497505060200194505050565b600082198211156106ff576106ff61071b565b500190565b6000828210156107165761071661071b565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212201104c8a6af82378541c034a5625edd30341d8ec121169320824dc8c85451ba4a64736f6c63430008030033";

type ScoreVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScoreVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScoreVault__factory extends ContractFactory {
  constructor(...args: ScoreVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ScoreVault> {
    return super.deploy(overrides || {}) as Promise<ScoreVault>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ScoreVault {
    return super.attach(address) as ScoreVault;
  }
  override connect(signer: Signer): ScoreVault__factory {
    return super.connect(signer) as ScoreVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScoreVaultInterface {
    return new utils.Interface(_abi) as ScoreVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ScoreVault {
    return new Contract(address, _abi, signerOrProvider) as ScoreVault;
  }
}
